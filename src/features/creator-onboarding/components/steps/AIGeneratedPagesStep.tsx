'use client';

import { useEffect, useState } from 'react';
import { Eye, Sparkles, Wand2 } from 'lucide-react';

import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { toast } from '@/components/ui/use-toast';

import { updateCreatorProfileAction } from '../../actions/onboarding-actions';
import type { CreatorProfile } from '../../types';

interface AIGeneratedPagesStepProps {
  profile: CreatorProfile;
  setSubmitFunction: (func: (() => Promise<void>) | null) => void;
}

export function AIGeneratedPagesStep({ profile, setSubmitFunction }: AIGeneratedPagesStepProps) {
  const [isGenerating, setIsGenerating] = useState(true);
  const [generatedPages, setGeneratedPages] = useState<Record<string, string>>({});

  useEffect(() => {
    const generatePages = async () => {
      setIsGenerating(true);
      // In a real implementation, this would call an AI service
      // For now, we simulate the generation process
      await new Promise(resolve => setTimeout(resolve, 2000));

      // Mock generated content
      setGeneratedPages({
        home: `<h1>Welcome to ${profile.business_name}</h1><p>Your amazing new storefront.</p>`,
        pricing: `<h2>Our Plans</h2><p>Find the perfect plan for you.</p>`,
        account: `<h3>Manage Your Account</h3><p>View your subscriptions and billing history.</p>`,
      });
      
      setIsGenerating(false);
      toast({
        description: "We've generated your storefront pages based on your brand!",
      });
    };

    generatePages();
  }, [profile.business_name]);

  const handleSubmit = async () => {
    // In a real implementation, you would save the generated page content
    // For now, we just advance the step
    await updateCreatorProfileAction({
      onboarding_step: 6, // Advance to the next step
    });
  };

  useEffect(() => {
    setSubmitFunction(handleSubmit);
    return () => setSubmitFunction(null);
  }, [handleSubmit, setSubmitFunction]);

  return (
    <div className="space-y-6">
      <div className="text-center">
        <Wand2 className="h-12 w-12 mx-auto mb-4 text-primary" />
        <h2 className="text-xl font-semibold mb-2 text-gray-900">AI Generated Storefront</h2>
        <p className="text-gray-600">
          Here's a preview of your new storefront pages, generated by AI. You can customize everything later.
        </p>
      </div>

      {isGenerating ? (
        <div className="text-center py-12">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
          <p className="text-gray-600">Generating your pages...</p>
        </div>
      ) : (
        <div className="bg-white rounded-lg border border-gray-200 shadow-sm">
          <Tabs defaultValue="home">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="home">Home Page</TabsTrigger>
              <TabsTrigger value="pricing">Pricing Page</TabsTrigger>
              <TabsTrigger value="account">Account Portal</TabsTrigger>
            </TabsList>
            <TabsContent value="home" className="p-4">
              <iframe
                srcDoc={generatedPages.home}
                title="Home Page Preview"
                className="w-full h-64 border rounded-md"
              />
            </TabsContent>
            <TabsContent value="pricing" className="p-4">
              <iframe
                srcDoc={generatedPages.pricing}
                title="Pricing Page Preview"
                className="w-full h-64 border rounded-md"
              />
            </TabsContent>
            <TabsContent value="account" className="p-4">
              <iframe
                srcDoc={generatedPages.account}
                title="Account Portal Preview"
                className="w-full h-64 border rounded-md"
              />
            </TabsContent>
          </Tabs>
        </div>
      )}
    </div>
  );
}